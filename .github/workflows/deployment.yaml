name: Boilerplate deployment

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]
  
  workflow_dispatch:

jobs:
  build-develop:
    name: Build develop

    runs-on: ubuntu-latest

    environment:
      name: develop

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: felipemmachado28/boilerplate-dotnet8:${{vars.DOCKER_TAG }}

  deploy-develop:
    name: "deploy develop"
    runs-on: dev

    needs: build-develop

    environment:
      name: develop

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - run: |
      #     security -v unlock-keychain ~/Library/Keychains/login.keychain-db

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      #- name: Login to Docker Hub
        # run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin ${{ secrets.DOCKERHUB_TOKEN }}
        #run: sudo echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        #run: echo ${{ secrets.DOCKERHUB_TOKEN }} > dockerhub_pass
      
      #- name: Login to Docker Hub
      #  run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Replace Connection String
        run: |
          sed -i "s|CONNECTION_STRING|${{ secrets.CONNECTION_STRING }}|" docker-compose.yml

          sed -i "s|APPLICATION_INSIGHTS_KEY|${{ secrets.APPLICATION_INSIGHTS_KEY }}|" docker-compose.yml

          sed -i "s|JWT_APPLICATION_KEY|${{ secrets.JWT_APPLICATION_KEY }}|" docker-compose.yml
          sed -i "s|JWT_APPLICATION_EXPIRES_MINUTES|${{ vars.JWT_APPLICATION_EXPIRES_MINUTES }}|" docker-compose.yml
          sed -i "s|JWT_APPLICATION_ISUSER|${{ vars.JWT_APPLICATION_ISUSER }}|" docker-compose.yml

          sed -i "s|JWT_PASSWORD_KEY|${{ secrets.JWT_PASSWORD_KEY }}|" docker-compose.yml
          sed -i "s|JWT_PASSWORD_EXPIRES_MINUTES|${{ vars.JWT_PASSWORD_EXPIRES_MINUTES }}|" docker-compose.yml
          sed -i "s|JWT_PASSWORD_ISUSER|${{ vars.JWT_PASSWORD_ISUSER }}|" docker-compose.yml

          sed -i "s|SENDGRID_KEY|${{ vars.SENDGRID_KEY }}|" docker-compose.yml
          sed -i "s|SENDGRID_FORGOT_PASSWORD_ID|${{ vars.SENDGRID_FORGOT_PASSWORD_ID }}|" docker-compose.yml
          sed -i "s|SENDGRID_FIRST_ACCESS_ID|${{ vars.SENDGRID_FIRST_ACCESS_ID }}|" docker-compose.yml
          sed -i "s|URL_FRONT|${{ vars.URL_FRONT }}|" docker-compose.yml
          sed -i "s|FROM_NAME|${{ vars.FROM_NAME }}|" docker-compose.yml
          sed -i "s|FORM_EMAIL|${{ vars.FORM_EMAIL }}|" docker-compose.yml

          sed -i "s|FILE_BUCKET_NAME|${{ vars.FILE_BUCKET_NAME }}|" docker-compose.yml
          sed -i "s|FILE_BUCKET_URL|${{ vars.FILE_BUCKET_URL }}|" docker-compose.yml
          sed -i "s|FILE_SERVER_URL|${{ vars.FILE_SERVER_URL }}|" docker-compose.yml
          sed -i "s|FILE_KEY_ID|${{ secrets.FILE_KEY_ID }}|" docker-compose.yml
          sed -i "s|FILE_SECRET_KEY|${{ secrets.FILE_SECRET_KEY }}|" docker-compose.yml

          sed -i "s|DOCKER_SERVER_NAME|${{ vars.DOCKER_SERVER_NAME }}|" docker-compose.yml
          sed -i "s|DOCKER_CONTAINER_NAME|${{ vars.DOCKER_CONTAINER_NAME }}|" docker-compose.yml
          sed -i "s|DOCKER_IMAGE_NAME|felipemmachado28/boilerplate-dotnet8:${{vars.DOCKER_TAG }}|" docker-compose.yml
          sed -i "s|DOCKER_PORT|${{ vars.DOCKER_PORT }}|" docker-compose.yml

      - name: show docker-compose.yml
        run: cat docker-compose.yml

      - uses: actions/checkout@v2
      - name: Upload ftp
        uses: sebastianpopp/ftp-action@releases/v2
        with:
          host: ${{ secrets.SSH_HOST }}
          user: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_KEY }}
          localDir: "/docker-compose.yml"
          remoteDir: "/home"
          options: "--delete --asci"

      - name: docker compose
        run: docker compose -f docker-compose.yml up --build --force-recreate -d && yes | docker image prune --all

      - name: run migration
        run: docker exec ${{ vars.DOCKER_CONTAINER_NAME }} bash -c "dotnet ef database update --startup-project API/API.csproj -p /Infra/Infra.csproj -v -c ApplicationDbContext"'