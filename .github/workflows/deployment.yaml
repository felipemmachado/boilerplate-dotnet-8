name: Boilerplate deployment

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]
  
  workflow_dispatch:

jobs:
  build-develop:
    name: Build develop

    runs-on: ubuntu-latest

    environment:
      name: develop

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: felipemmachado28/boilerplate-dotnet8:${{vars.DOCKER_TAG }}

      - name: replace envs
        run: |
          sed -i "s|CONNECTION_STRING|${{ secrets.CONNECTION_STRING }}|" docker-compose.yml

          sed -i "s|APPLICATION_INSIGHTS_KEY|${{ secrets.APPLICATION_INSIGHTS_KEY }}|" docker-compose.yml

          sed -i "s|JWT_APPLICATION_KEY|${{ secrets.JWT_APPLICATION_KEY }}|" docker-compose.yml
          sed -i "s|JWT_APPLICATION_EXPIRES_MINUTES|${{ vars.JWT_APPLICATION_EXPIRES_MINUTES }}|" docker-compose.yml
          sed -i "s|JWT_APPLICATION_ISUSER|${{ vars.JWT_APPLICATION_ISUSER }}|" docker-compose.yml

          sed -i "s|JWT_PASSWORD_KEY|${{ secrets.JWT_PASSWORD_KEY }}|" docker-compose.yml
          sed -i "s|JWT_PASSWORD_EXPIRES_MINUTES|${{ vars.JWT_PASSWORD_EXPIRES_MINUTES }}|" docker-compose.yml
          sed -i "s|JWT_PASSWORD_ISUSER|${{ vars.JWT_PASSWORD_ISUSER }}|" docker-compose.yml

          sed -i "s|SENDGRID_KEY|${{ vars.SENDGRID_KEY }}|" docker-compose.yml
          sed -i "s|SENDGRID_FORGOT_PASSWORD_ID|${{ vars.SENDGRID_FORGOT_PASSWORD_ID }}|" docker-compose.yml
          sed -i "s|SENDGRID_FIRST_ACCESS_ID|${{ vars.SENDGRID_FIRST_ACCESS_ID }}|" docker-compose.yml
          sed -i "s|URL_FRONT|${{ vars.URL_FRONT }}|" docker-compose.yml
          sed -i "s|FROM_NAME|${{ vars.FROM_NAME }}|" docker-compose.yml
          sed -i "s|FORM_EMAIL|${{ vars.FORM_EMAIL }}|" docker-compose.yml

          sed -i "s|FILE_BUCKET_NAME|${{ vars.FILE_BUCKET_NAME }}|" docker-compose.yml
          sed -i "s|FILE_BUCKET_URL|${{ vars.FILE_BUCKET_URL }}|" docker-compose.yml
          sed -i "s|FILE_SERVER_URL|${{ vars.FILE_SERVER_URL }}|" docker-compose.yml
          sed -i "s|FILE_KEY_ID|${{ secrets.FILE_KEY_ID }}|" docker-compose.yml
          sed -i "s|FILE_SECRET_KEY|${{ secrets.FILE_SECRET_KEY }}|" docker-compose.yml

          sed -i "s|DOCKER_SERVER_NAME|${{ vars.DOCKER_SERVER_NAME }}|" docker-compose.yml
          sed -i "s|DOCKER_CONTAINER_NAME|${{ vars.DOCKER_CONTAINER_NAME }}|" docker-compose.yml
          sed -i "s|DOCKER_IMAGE_NAME|felipemmachado28/boilerplate-dotnet8:${{vars.DOCKER_TAG }}|" docker-compose.yml
          sed -i "s|DOCKER_PORT|${{ vars.DOCKER_PORT }}|" docker-compose.yml

      - name: save docker-compose.yml
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose.yml
          path: docker-compose.yml
          if-no-files-found: error

  migration-develop:
    name: "migration develop"
    runs-on: ubuntu-latest

    needs: build-develop

    environment:
      name: develop

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8

    - name: install ef core
      run: dotnet tool install --global dotnet-ef

    - name: replace env
      run: |
        sed -i "s|CONNECTION_STRING|${{ secrets.CONNECTION_STRING }}|" API/appsettings.json

        sed -i "s|APPLICATION_INSIGHTS_KEY|${{ secrets.APPLICATION_INSIGHTS_KEY }}|" API/appsettings.json

        sed -i "s|JWT_APPLICATION_KEY|${{ secrets.JWT_APPLICATION_KEY }}|" API/appsettings.json
        sed -i "s|JWT_APPLICATION_EXPIRES_MINUTES|${{ vars.JWT_APPLICATION_EXPIRES_MINUTES }}|" API/appsettings.json
        sed -i "s|JWT_APPLICATION_ISUSER|${{ vars.JWT_APPLICATION_ISUSER }}|" API/appsettings.json

        sed -i "s|JWT_PASSWORD_KEY|${{ secrets.JWT_PASSWORD_KEY }}|" API/appsettings.json
        sed -i "s|JWT_PASSWORD_EXPIRES_MINUTES|${{ vars.JWT_PASSWORD_EXPIRES_MINUTES }}|" API/appsettings.json
        sed -i "s|JWT_PASSWORD_ISUSER|${{ vars.JWT_PASSWORD_ISUSER }}|" API/appsettings.json

        sed -i "s|SENDGRID_KEY|${{ vars.SENDGRID_KEY }}|" API/appsettings.json
        sed -i "s|SENDGRID_FORGOT_PASSWORD_ID|${{ vars.SENDGRID_FORGOT_PASSWORD_ID }}|" API/appsettings.json
        sed -i "s|SENDGRID_FIRST_ACCESS_ID|${{ vars.SENDGRID_FIRST_ACCESS_ID }}|" API/appsettings.json
        sed -i "s|URL_FRONT|${{ vars.URL_FRONT }}|" API/appsettings.json
        sed -i "s|FROM_NAME|${{ vars.FROM_NAME }}|" API/appsettings.json
        sed -i "s|FORM_EMAIL|${{ vars.FORM_EMAIL }}|" API/appsettings.json

        sed -i "s|FILE_BUCKET_NAME|${{ vars.FILE_BUCKET_NAME }}|" API/appsettings.json
        sed -i "s|FILE_BUCKET_URL|${{ vars.FILE_BUCKET_URL }}|" API/appsettings.json
        sed -i "s|FILE_SERVER_URL|${{ vars.FILE_SERVER_URL }}|" API/appsettings.json
        sed -i "s|FILE_KEY_ID|${{ secrets.FILE_KEY_ID }}|" API/appsettings.json
        sed -i "s|FILE_SECRET_KEY|${{ secrets.FILE_SECRET_KEY }}|" API/appsettings.json

    - name: Build
      run: cat API/appsettings.json

    - name: Restore dependencies
      run: dotnet restore

    - name: Run Migrations
      run: dotnet ef database update --startup-project API/API.csproj -p Infra/Infra.csproj -v -c ApplicationDbContext

  deploy-develop:
    name: "deploy develop"
    runs-on: ubuntu-latest

    needs: migration-develop

    environment:
      name: develop

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: docker-compose.yml

      - name: show docker-compose.yml
        run: cat docker-compose.yml

      - name: copy docker-compose.yml
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "docker-compose.yml"
          target: "/home/github"

      # - name: replace envs
      #   uses: appleboy/ssh-action@v1.0.0
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USERNAME }}
      #     password: ${{ secrets.SSH_KEY }}
      #     port: ${{ secrets.SSH_PORT }}
      #     script: |
      #       cd home/github

      #       sed -i "s|CONNECTION_STRING|${{ secrets.CONNECTION_STRING }}|" docker-compose.yml

      #       sed -i "s|APPLICATION_INSIGHTS_KEY|${{ secrets.APPLICATION_INSIGHTS_KEY }}|" docker-compose.yml
  
      #       sed -i "s|JWT_APPLICATION_KEY|${{ secrets.JWT_APPLICATION_KEY }}|" docker-compose.yml
      #       sed -i "s|JWT_APPLICATION_EXPIRES_MINUTES|${{ vars.JWT_APPLICATION_EXPIRES_MINUTES }}|" docker-compose.yml
      #       sed -i "s|JWT_APPLICATION_ISUSER|${{ vars.JWT_APPLICATION_ISUSER }}|" docker-compose.yml
  
      #       sed -i "s|JWT_PASSWORD_KEY|${{ secrets.JWT_PASSWORD_KEY }}|" docker-compose.yml
      #       sed -i "s|JWT_PASSWORD_EXPIRES_MINUTES|${{ vars.JWT_PASSWORD_EXPIRES_MINUTES }}|" docker-compose.yml
      #       sed -i "s|JWT_PASSWORD_ISUSER|${{ vars.JWT_PASSWORD_ISUSER }}|" docker-compose.yml
  
      #       sed -i "s|SENDGRID_KEY|${{ vars.SENDGRID_KEY }}|" docker-compose.yml
      #       sed -i "s|SENDGRID_FORGOT_PASSWORD_ID|${{ vars.SENDGRID_FORGOT_PASSWORD_ID }}|" docker-compose.yml
      #       sed -i "s|SENDGRID_FIRST_ACCESS_ID|${{ vars.SENDGRID_FIRST_ACCESS_ID }}|" docker-compose.yml
      #       sed -i "s|URL_FRONT|${{ vars.URL_FRONT }}|" docker-compose.yml
      #       sed -i "s|FROM_NAME|${{ vars.FROM_NAME }}|" docker-compose.yml
      #       sed -i "s|FORM_EMAIL|${{ vars.FORM_EMAIL }}|" docker-compose.yml
  
      #       sed -i "s|FILE_BUCKET_NAME|${{ vars.FILE_BUCKET_NAME }}|" docker-compose.yml
      #       sed -i "s|FILE_BUCKET_URL|${{ vars.FILE_BUCKET_URL }}|" docker-compose.yml
      #       sed -i "s|FILE_SERVER_URL|${{ vars.FILE_SERVER_URL }}|" docker-compose.yml
      #       sed -i "s|FILE_KEY_ID|${{ secrets.FILE_KEY_ID }}|" docker-compose.yml
      #       sed -i "s|FILE_SECRET_KEY|${{ secrets.FILE_SECRET_KEY }}|" docker-compose.yml
  
      #       sed -i "s|DOCKER_SERVER_NAME|${{ vars.DOCKER_SERVER_NAME }}|" docker-compose.yml
      #       sed -i "s|DOCKER_CONTAINER_NAME|${{ vars.DOCKER_CONTAINER_NAME }}|" docker-compose.yml
      #       sed -i "s|DOCKER_IMAGE_NAME|felipemmachado28/boilerplate-dotnet8:${{vars.DOCKER_TAG }}|" docker-compose.yml
      #       sed -i "s|DOCKER_PORT|${{ vars.DOCKER_PORT }}|" docker-compose.yml

      - name: pull image
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: docker pull felipemmachado28/boilerplate-dotnet8:${{vars.DOCKER_TAG }}

      - name: stop/start container
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker compose down
            docker compose up --build -d

      # - name: remove docker-compose
      #   uses: appleboy/ssh-action@v1.0.0
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USERNAME }}
      #     password: ${{ secrets.SSH_KEY }}
      #     port: ${{ secrets.SSH_PORT }}
      #     script: rm docker-compose.yml